apiVersion: batch/v1
kind: Job
metadata:
  name: db-migration
  namespace: magic-video
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: migration
        image: magic-video-api:latest
        command: ["/bin/sh"]
        args:
          - -c
          - |
            cd /root/internal/migrations
            export DB_CONNECTION="$DB_USER:$DB_PASSWORD@tcp($DB_HOST:$DB_PORT)/$DB_NAME?parseTime=true"
            echo "Waiting for MySQL to be ready..."
            until nc -z $DB_HOST $DB_PORT; do
              echo "MySQL is not ready yet..."
              sleep 2
            done
            echo "MySQL is ready! Running migrations..."
            goose -dir . mysql "$DB_CONNECTION" up
            echo "Migrations completed successfully!"
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: DB_PORT
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: DB_PASSWORD
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: DB_NAME
      initContainers:
      - name: wait-for-mysql
        image: busybox:1.35
        command: ['sh', '-c']
        args:
          - |
            until nc -z mysql-service 3306; do
              echo "Waiting for MySQL..."
              sleep 2
            done
            echo "MySQL is ready!"
