// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package order

import contracts "github.com/ARTMUC/magic-video/internal/contracts"

type VideoCompositionConverterImpl struct{}

func (c *VideoCompositionConverterImpl) VideoCompositionDomainToContract(source Order) contracts.Order {
	var contractsOrder contracts.Order
	contractsOrder.BaseModel = BaseToBase(source.BaseModel)
	contractsOrder.CustomerID = UUIDToUUID(source.CustomerID)
	contractsOrder.GrossAmount = DecimalToDecimal(source.GrossAmount)
	contractsOrder.NetAmount = DecimalToDecimal(source.NetAmount)
	contractsOrder.TaxAmount = DecimalToDecimal(source.TaxAmount)
	contractsOrder.Status = source.Status
	contractsOrder.PaymentStatus = source.PaymentStatus
	if source.OrderLines != nil {
		contractsOrder.OrderLines = make([]contracts.OrderLine, len(source.OrderLines))
		for i := 0; i < len(source.OrderLines); i++ {
			contractsOrder.OrderLines[i] = c.orderOrderLineToContractsOrderLine(source.OrderLines[i])
		}
	}
	return contractsOrder
}
func (c *VideoCompositionConverterImpl) orderOrderLineToContractsOrderLine(source OrderLine) contracts.OrderLine {
	var contractsOrderLine contracts.OrderLine
	contractsOrderLine.BaseModel = BaseToBase(source.BaseModel)
	contractsOrderLine.OrderID = UUIDToUUID(source.OrderID)
	contractsOrderLine.VideoCompositionID = UUIDToUUID(source.VideoCompositionID)
	contractsOrderLine.ProductID = UUIDToUUID(source.ProductID)
	contractsOrderLine.Quantity = source.Quantity
	contractsOrderLine.Amount = DecimalToDecimal(source.Amount)
	return contractsOrderLine
}
